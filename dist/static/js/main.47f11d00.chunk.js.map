{"version":3,"sources":["square.tsx","board.tsx","useWinner.ts","calculateWinner.ts","getStatus.ts","game.tsx","useXIsNext.ts","genMoves.tsx","index.tsx"],"names":["Square","value","onClick","className","data-test","Board","squares","handleClick","renderSquare","i","useWinner","useState","win","setWin","useEffect","winner","lines","length","a","b","c","calculateWinner","nextPlayer","xIsNext","Game","Array","fill","history","setHistory","historyIndex","setHistoryIndex","setXIsNext","useXIsNext","status","getStatus","moves","changeHistory","map","_","move","desc","key","genMoves","newSquares","slice","newHistoryIndex","newHistory","updateHistory","chrome","browserAction","setBadgeText","text","String","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.47f11d00.chunk.js","sourcesContent":["import React from \"react\";\n\ntype SquareProps = {\n  value: string;\n  onClick: () => void;\n};\n\nexport const Square: React.FC<SquareProps> = ({ value, onClick }) => {\n  return (\n    <button\n      className=\"square\"\n      data-test=\"square\"\n      onClick={() => {\n        onClick();\n      }}\n    >\n      {value}\n    </button>\n  );\n};\n","import React from \"react\";\nimport { Square } from \"./square\";\nimport { NextPlayer } from \"./nextPlayerTypes\";\n\ntype BoardProps = {\n  squares: NextPlayer[];\n  handleClick: (i: number) => void;\n};\n\nexport const Board: React.FC<BoardProps> = ({ squares, handleClick }) => {\n  const renderSquare = (i: number) => {\n    return <Square onClick={() => handleClick(i)} value={squares[i]} />;\n  };\n\n  return (\n    <div>\n      <div className=\"board-row\">\n        {renderSquare(0)}\n        {renderSquare(1)}\n        {renderSquare(2)}\n      </div>\n      <div className=\"board-row\">\n        {renderSquare(3)}\n        {renderSquare(4)}\n        {renderSquare(5)}\n      </div>\n      <div className=\"board-row\">\n        {renderSquare(6)}\n        {renderSquare(7)}\n        {renderSquare(8)}\n      </div>\n    </div>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { calculateWinner } from \"./calculateWinner\";\nimport { NextPlayer } from \"./nextPlayerTypes\";\n\nexport const useWinner = (squares: NextPlayer[]) => {\n  const [win, setWin] = useState<boolean>(false);\n  useEffect(() => {\n    const winner: NextPlayer = calculateWinner(squares);\n    winner === \"\" ? setWin(false) : setWin(true);\n  });\n  return win;\n};\n","import { NextPlayer } from \"./nextPlayerTypes\";\n\nexport const calculateWinner = (squares: NextPlayer[]): NextPlayer => {\n  const lines: number[][] = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return \"\";\n};\n","import { NextPlayer } from \"./nextPlayerTypes\";\n\nconst winner = (xIsNext: boolean): NextPlayer => (xIsNext ? \"O\" : \"X\");\nexport const nextPlayer = (xIsNext: boolean): NextPlayer =>\n  xIsNext ? \"X\" : \"O\";\nexport const getStatus = (win: boolean, xIsNext: boolean): string =>\n  win ? \"winner: \" + winner(xIsNext) : \"Next player: \" + nextPlayer(xIsNext);\n","import React, { useState } from \"react\";\nimport { Board } from \"./board\";\nimport { NextPlayer } from \"./nextPlayerTypes\";\nimport { useXIsNext } from \"./useXIsNext\";\nimport { useWinner } from \"./useWinner\";\nimport { genMoves } from \"./genMoves\";\nimport { getStatus, nextPlayer } from \"./getStatus\";\n\nexport const Game: React.FC = () => {\n  const [history, setHistory] = useState<NextPlayer[][]>([Array(9).fill(\"\")]);\n  const [historyIndex, setHistoryIndex] = useState<number>(0);\n\n  const squares: NextPlayer[] = history[historyIndex];\n  const xIsNext: boolean = useXIsNext(historyIndex);\n  const win: boolean = useWinner(squares);\n  const status: String = getStatus(win, xIsNext);\n  const moves = genMoves(setHistoryIndex, history);\n\n  const updateHistory = (squares: NextPlayer[]) => {\n    const newHistoryIndex = historyIndex + 1;\n    setHistoryIndex(newHistoryIndex);\n\n    const newHistory: NextPlayer[][] = history.slice();\n    newHistory[newHistoryIndex] = squares;\n    for (let i = newHistoryIndex + 1; i < 10; i++) {\n      delete newHistory[i];\n    }\n    setHistory(newHistory);\n  };\n\n  const handleClick = (i: number): void => {\n    if (squares[i] !== \"\" || win) return;\n\n    const newSquares: NextPlayer[] = squares.slice();\n    newSquares[i] = nextPlayer(xIsNext);\n    updateHistory(newSquares);\n    chrome.browserAction.setBadgeText({text: String(i)})\n  };\n\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board handleClick={handleClick} squares={squares} />\n      </div>\n      <div className=\"game-info\">\n        <div className=\"status\" data-test=\"gameStatus\">\n          {status}\n        </div>\n        <ol>{moves}</ol>\n      </div>\n    </div>\n  );\n};\n","import { useState, useEffect } from \"react\";\n\nexport const useXIsNext = (historyIndex: number): boolean => {\n  const [xIsNext, setXIsNext] = useState<boolean>(true);\n  useEffect(() => {\n    const newXIsNext = historyIndex % 2 === 0;\n    setXIsNext(newXIsNext);\n  });\n  return xIsNext;\n};\n","import React from \"react\";\nimport { NextPlayer } from \"./nextPlayerTypes\";\n\nexport const genMoves = (\n  changeHistory: (i: number) => void,\n  history: NextPlayer[][]\n): JSX.Element[] => {\n  return history.map((_, move: number) => {\n    const desc = move ? \"Go to move #\" + move : \"Go to game start\";\n    return (\n      <li key={move}>\n        <button\n          onClick={() => {\n            changeHistory(move);\n          }}\n        >\n          {desc}\n        </button>\n      </li>\n    );\n  });\n};\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { Game } from \"./game\";\nimport \"./index.css\";\n\nReactDOM.render(<Game />, document.getElementById(\"root\"));\n"],"sourceRoot":""}